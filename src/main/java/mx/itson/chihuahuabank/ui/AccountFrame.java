
package mx.itson.chihuahuabank.ui;

import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.itson.chihuahuabank.entities.Account;
import mx.itson.chihuahuabank.entities.InterestCalculator;
import mx.itson.chihuahuabank.entities.InterestRateManager;
import mx.itson.chihuahuabank.entities.Transaction;
import mx.itson.chihuahuabank.entities.TransactionTableLoader;
import mx.itson.chihuahuabank.enums.TransactionType;

// @authors: Andrey, 02, 03, 04

public class AccountFrame extends javax.swing.JFrame {

    // Represents the main account object containing all data from the JSON
    private Account a;

    /**
     * Creates new form, AccountFrame
     */
    public AccountFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFile = new javax.swing.JButton();
        lblAccountNumber = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblNameHolder = new javax.swing.JLabel();
        lblProduct = new javax.swing.JLabel();
        lblCurrency = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCodeHolder = new javax.swing.JLabel();
        lblTaxpayerIdHolder = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactions = new javax.swing.JTable();
        lblAddressHolder = new javax.swing.JLabel();
        lblCityHolder = new javax.swing.JLabel();
        lblZipCodeHolder = new javax.swing.JLabel();
        btnApplyInterestRate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtInterestRate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnFile.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        btnFile.setForeground(new java.awt.Color(0, 51, 204));
        btnFile.setText("Select JSON File...");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        lblAccountNumber.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblAccountNumber.setForeground(new java.awt.Color(204, 0, 51));
        lblAccountNumber.setText("...");

        lblTitle.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(153, 0, 153));
        lblTitle.setText("Chihuahua Bank");

        lblNameHolder.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblNameHolder.setForeground(new java.awt.Color(0, 102, 204));
        lblNameHolder.setText("...");

        lblProduct.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblProduct.setForeground(new java.awt.Color(0, 51, 255));
        lblProduct.setText("...");

        lblCurrency.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblCurrency.setForeground(new java.awt.Color(204, 0, 51));
        lblCurrency.setText("...");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 17)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Account Details ---");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 204));
        jLabel2.setText("Account Owner ---");

        lblCodeHolder.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblCodeHolder.setForeground(new java.awt.Color(0, 102, 204));
        lblCodeHolder.setText("...");

        lblTaxpayerIdHolder.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblTaxpayerIdHolder.setForeground(new java.awt.Color(0, 102, 204));
        lblTaxpayerIdHolder.setText("...");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 204));
        jLabel3.setText("Account Owner Address ---");

        tblTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Reference", "Description", "- Charge", "+ Deposit", "* Balance"
            }
        ));
        jScrollPane1.setViewportView(tblTransactions);

        lblAddressHolder.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblAddressHolder.setForeground(new java.awt.Color(204, 0, 204));
        lblAddressHolder.setText("...");

        lblCityHolder.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblCityHolder.setForeground(new java.awt.Color(204, 0, 204));
        lblCityHolder.setText("...");

        lblZipCodeHolder.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        lblZipCodeHolder.setForeground(new java.awt.Color(204, 0, 204));
        lblZipCodeHolder.setText("...");

        btnApplyInterestRate.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnApplyInterestRate.setForeground(new java.awt.Color(0, 153, 153));
        btnApplyInterestRate.setText("Apply Interest Rate");
        btnApplyInterestRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyInterestRateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 204));
        jLabel4.setText("Transactions:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnApplyInterestRate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(228, 228, 228)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(78, 78, 78))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblAccountNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(lblNameHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(224, 224, 224)
                                        .addComponent(lblTaxpayerIdHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblCodeHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                                    .addComponent(lblZipCodeHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCityHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAddressHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFile, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTitle)
                            .addComponent(lblProduct)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAccountNumber)
                            .addComponent(lblNameHolder)
                            .addComponent(lblAddressHolder))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrency)
                    .addComponent(lblCodeHolder)
                    .addComponent(lblCityHolder))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaxpayerIdHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZipCodeHolder))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApplyInterestRate)
                    .addComponent(jLabel4)
                    .addComponent(txtInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Handles the action event triggered when the "File" button is clicked.
    *
    * This method opens a file selection dialog, reads the selected JSON file,
    * deserializes it into an {@link Account} object, and updates the UI labels
    * and transaction table with the account's data.
    *
    * @param evt the action event triggered by the button click
    */
    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        // Open a file dialog for selecting a file to load    
        FileDialog fileDialog = new FileDialog(this, "Select File", FileDialog.LOAD);
        fileDialog.setVisible(true);

        String directory = fileDialog.getDirectory();
        String filename = fileDialog.getFile();

        if (filename != null) {
            File selectedFile = new File(directory, filename);
            try (BufferedReader reader = new BufferedReader(new FileReader(selectedFile))) {
                // Read the contents of the selected file
                StringBuilder content = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    content.append(line).append("\n");
                }
                String contentt = content.toString();  
                       
                // Deserialize the JSON content into an Account object
                a = Account.deserialize(contentt);
                        
                // Update UI labels with account data ===

                // Displays the product name
                lblProduct.setText(a.getProduct());
                        
                // Displays the account number
                lblAccountNumber.setText("Account #: " + a.getAccountNumber());
                        
                // Displays the currency type of the account
                lblCurrency.setText("Currency: " + a.getCurrency());
                        
                // Displays the account holder's name
                lblNameHolder.setText("Name: " + a.getAccountHolder().getName());
                        
                // Displays the account holder's ID code
                lblCodeHolder.setText("ID: " + a.getAccountHolder().getCode());
                        
                // Displays the account holder's taxpayer ID
                lblTaxpayerIdHolder.setText("TID: " + a.getAccountHolder().getTaxpayerId());
                        
                // Displays the account holder's address
                lblAddressHolder.setText(a.getAccountHolder().getAddress());
                        
                // Displays the account holder's city
                lblCityHolder.setText(a.getAccountHolder().getCity());
                        
                // Displays the account holder's ZIP code
                lblZipCodeHolder.setText("ZIP: " + a.getAccountHolder().getZipCode());
                            
                // Load and display the list of transactions in the table
                DefaultTableModel model = (DefaultTableModel) tblTransactions.getModel();
                TransactionTableLoader.loadTransactionsIntoTable(model, a.getTransactions());
                
            } catch (IOException ex) {
                // Print the stack trace if an error occurs while reading the file
                ex.printStackTrace();
            }
        }   
    }//GEN-LAST:event_btnFileActionPerformed

    // Manages the logic for applying and retrieving the daily interest rate
    private InterestRateManager rateManager = new InterestRateManager();
    
    /**
    * Handles the action event triggered when the "Apply Interest Rate" button is clicked.
    * 
    * This method retrieves the interest rate entered by the user, applies it to the transaction list
    * by generating new interest transactions for missing days, updates the transaction table, and displays a confirmation.
    *
    * @param evt the action event triggered by the button click
    */
    private void btnApplyInterestRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyInterestRateActionPerformed
        try{
            // Retrieve and save the entered interest rate
            double rate = Double.parseDouble(txtInterestRate.getText());
            rateManager.setDailyInterestRate(rate);

            // Generate a new list of transactions including interest for missing days
            List<Transaction> updatedTransactions = InterestCalculator.generateTransactionsWithInterest(
                a.getTransactions(), rate
            );

            // Get the table model and clear its current contents
            DefaultTableModel model = (DefaultTableModel) tblTransactions.getModel();
            model.setRowCount(0);

            // Prepare date format and initialize the balance
            SimpleDateFormat sdf = new SimpleDateFormat("dd 'de' MMMM 'de' yyyy");
            double balance = 0;

            // Fill the table with the updated transactions
            for (Transaction t : updatedTransactions) {
                String charge = "", deposit = "";

                if (t.getType() == TransactionType.CARGO) {
                    charge = String.format("%.2f", t.getAmount());
                    balance -= t.getAmount();  // Subtract charges
                } else if (t.getType() == TransactionType.ABONO) {
                    deposit = String.format("%.2f", t.getAmount());
                    balance += t.getAmount();  // Add deposits
                }

                model.addRow(new Object[]{
                sdf.format(t.getDate()),
                t.getReference(),
                t.getDescription(),
                charge,
                deposit,
                String.format("%.2f", balance)  // Show balance with two decimal places
                });
            }
        
            // Show confirmation message
            JOptionPane.showMessageDialog(this, "Interest rate applied successfully: " + rate);

        } catch (NumberFormatException e) {
            // Show error message if the input is not a valid number
            JOptionPane.showMessageDialog(this, "Please enter a valid rate (example: 0.0003).",
            "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnApplyInterestRateActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplyInterestRate;
    private javax.swing.JButton btnFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccountNumber;
    private javax.swing.JLabel lblAddressHolder;
    private javax.swing.JLabel lblCityHolder;
    private javax.swing.JLabel lblCodeHolder;
    private javax.swing.JLabel lblCurrency;
    private javax.swing.JLabel lblNameHolder;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JLabel lblTaxpayerIdHolder;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblZipCodeHolder;
    private javax.swing.JTable tblTransactions;
    private javax.swing.JTextField txtInterestRate;
    // End of variables declaration//GEN-END:variables
}
